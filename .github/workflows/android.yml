name: Build Android APK

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.12'

      - name: Install Buildozer System Dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            git \
            zip \
            unzip \
            openjdk-17-jdk \
            python3-pip \
            autoconf \
            automake \
            libtool \
            pkg-config \
            zlib1g-dev \
            libncurses5-dev \
            libncursesw5-dev \
            cmake \
            libffi-dev \
            libssl-dev \
            m4 \
            libtool-bin \
            gettext \
            autopoint

      - name: Install Buildozer and Python Dependencies
        run: |
          pip3 install --user --upgrade Cython==0.29.36 virtualenv buildozer python-for-android
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      # --- Android SDK Setup ---
      - name: Set JAVA_HOME and ANDROID_HOME
        run: |
          echo "JAVA_HOME=$(dirname $(dirname $(readlink -f $(which javac))))" >> $GITHUB_ENV
          echo "ANDROID_HOME=$HOME/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV
          mkdir -p $ANDROID_HOME

      - name: Download and Extract Android Command-line Tools
        run: |
          CMDLINE_TOOLS_URL="https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip"
          TOOLS_DIR="$ANDROID_HOME/cmdline-tools"
          mkdir -p "$TOOLS_DIR"
          wget -q "$CMDLINE_TOOLS_URL" -O "$TOOLS_DIR/cmdline-tools.zip"
          unzip -q "$TOOLS_DIR/cmdline-tools.zip" -d "$TOOLS_DIR"
          mv "$TOOLS_DIR/cmdline-tools" "$TOOLS_DIR/latest"
          echo "$TOOLS_DIR/latest/bin" >> $GITHUB_PATH

      - name: Create sdkmanager Symlink
        run: |
          OLD_TOOLS_BIN="$ANDROID_HOME/tools/bin"
          mkdir -p "$OLD_TOOLS_BIN"
          ln -s "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" "$OLD_TOOLS_BIN/sdkmanager"
          ln -s "$ANDROID_HOME/cmdline-tools/latest/bin/avdmanager" "$OLD_TOOLS_BIN/avdmanager"

      - name: Accept Android SDK Licenses
        run: |
          yes | sdkmanager --licenses

      - name: Install Android Build-Tools, Platform-Tools, and Platform
        run: |
          sdkmanager "platforms;android-34" "build-tools;34.0.0" "platform-tools"
          echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH

      - name: Clean Buildozer environment
        run: |
          if [ -d ".buildozer" ]; then rm -rf .buildozer; fi
          if [ -d "bin" ]; then rm -rf bin; fi

      # --- Fix for autoconf/automake macro errors ---
      - name: Run autoupdate (fix autoconf macro errors)
        run: |
          if [ -f configure.ac ]; then autoupdate; fi

      - name: Update Autotools
        run: |
          sudo apt-get update
          sudo apt-get install -y autoconf automake libtool

      # Build APK with verbose output for debugging
      - name: Build Android Debug APK
        run: |
          python3 -m buildozer -v android clean
          python3 -m buildozer -v android debug

      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-debug
          path: bin/*.apk
          retention-days: 7