# Nama workflow ini yang akan muncul di tab 'Actions' GitHub Anda
name: Build Android APK

# Kapan workflow ini akan dijalankan
# Akan dipicu setiap kali ada push ke branch 'main'
# Juga bisa dijalankan secara manual dari UI GitHub Actions
on:
  push:
    branches:
      - main
  workflow_dispatch:

# Definisi pekerjaan (jobs)
jobs:
  build:
    # Runner yang akan digunakan untuk menjalankan pekerjaan ini
    # Ubuntu adalah lingkungan yang direkomendasikan untuk Buildozer
    runs-on: ubuntu-latest

    # Langkah-langkah (steps) yang akan dijalankan dalam pekerjaan 'build'
    steps:
      # Langkah 1: Checkout kode repositori Anda
      # Mengambil kode dari repositori GitHub ke runner
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Langkah 2: Menyiapkan lingkungan Python
      # Buildozer membutuhkan Python untuk beroperasi
      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9' # Pilih versi Python yang kompatibel dengan Kivy dan Buildozer

      # Langkah 3: Menginstal dependensi sistem yang dibutuhkan oleh Buildozer untuk Android
      # Ini termasuk JDK, alat pengembangan, dan pustaka lain
      - name: Install Buildozer System Dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            git \
            zip \
            unzip \
            openjdk-17-jdk \
            python3-pip \
            autoconf \
            libtool \
            pkg-config \
            zlib1g-dev \
            libncurses5-dev \
            libncursesw5-dev \
            cmake \
            libffi-dev \
            libssl-dev

      # Langkah 4: Menginstal Buildozer dan dependensi Python-nya
      # Cython adalah dependensi penting untuk Kivy
      - name: Install Buildozer and Python Dependencies
        run: |
          pip3 install --user --upgrade Cython==0.29.33 virtualenv buildozer
          # Menambahkan direktori instalasi user Python ke PATH
          # Ini memastikan perintah 'buildozer' dapat ditemukan
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      # --- START NEW ANDROID SDK SETUP STRATEGY ---

      # Langkah 4.5: Setel JAVA_HOME dan ANDROID_HOME
      # Buildozer akan mengunduh SDK ke ~/.buildozer/android/platform/android-sdk
      # Menyetel ANDROID_HOME secara eksplisit dapat membantu Buildozer menemukannya.
      - name: Set JAVA_HOME and ANDROID_HOME
        run: |
          echo "JAVA_HOME=$(dirname $(dirname $(readlink -f $(which javac))))" >> $GITHUB_ENV
          echo "ANDROID_HOME=$HOME/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV
          # Tambahkan direktori tools SDK ke PATH agar sdkmanager dan adb dapat ditemukan
          # Ini akan ditambahkan setelah Buildozer mengunduh cmdline-tools
          echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH

      # Langkah 4.6: Bersihkan lingkungan Buildozer (opsional, tapi disarankan untuk fresh start)
      - name: Clean Buildozer environment
        run: buildozer clean

      # Langkah 4.7: Perbarui Android SDK dan NDK menggunakan Buildozer
      # Perintah ini akan memastikan Buildozer mengunduh semua komponen yang diperlukan
      - name: Update Android SDK and NDK
        run: buildozer android update

      # Langkah 4.8: Terima Lisensi Android SDK
      # Ini sangat penting agar komponen SDK dapat diunduh dan digunakan.
      # Perintah 'yes |' secara otomatis menerima semua lisensi.
      - name: Accept Android SDK Licenses
        run: |
          yes | sdkmanager --licenses

      # --- END NEW ANDROID SDK SETUP STRATEGY ---

      # Langkah 5: Membangun APK Android menggunakan Buildozer
      # Sekarang Buildozer akan menemukan SDK yang sudah diatur dan lisensi diterima
      - name: Build Android Debug APK
        run: |
          buildozer android debug

      # Langkah 6: Mengunggah APK yang dihasilkan sebagai artifact GitHub Actions
      # Ini memungkinkan Anda mengunduh APK dari halaman Actions setelah build selesai
      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-debug
          path: bin/*.apk # Path di mana Buildozer menyimpan APK yang dihasilkan
          retention-days: 7 # Berapa lama artifact akan disimpan (misalnya, 7 hari)
